// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.

#include "CacheService.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;

using boost::shared_ptr;

using namespace  ::com::vrv::cems::service::base::interfaces;

class CacheServiceHandler : virtual public CacheServiceIf {
 public:
  CacheServiceHandler() {
    // Your initialization goes here
  }

  void getDataTS(std::string& _return, const std::string& maxCode, const std::string& minCode, const std::string& checkCode, const bool isZip, const std::string& data, const bool isEncrypt, const std::string& key, const int32_t flag) {
    // Your implementation goes here
    printf("getDataTS\n");
  }

  void isExist( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& prefix, const std::string& key) {
    // Your implementation goes here
    printf("isExist\n");
  }

  void setExpireTimeByString( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const int32_t expireTime) {
    // Your implementation goes here
    printf("setExpireTimeByString\n");
  }

  void setExpireTimeByBinary( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const int32_t expireTime) {
    // Your implementation goes here
    printf("setExpireTimeByBinary\n");
  }

  void batchDel( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::vector<std::string> & keyList) {
    // Your implementation goes here
    printf("batchDel\n");
  }

  void saveDevice( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceCache& deviceCache) {
    // Your implementation goes here
    printf("saveDevice\n");
  }

  void updateDevice( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceCache& deviceCache) {
    // Your implementation goes here
    printf("updateDevice\n");
  }

  void updateDeviceByField( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::map<std::string, std::string> & fieldValueMap) {
    // Your implementation goes here
    printf("updateDeviceByField\n");
  }

  void queryDevice( ::com::vrv::cems::service::base::bean::cache::DeviceCache& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceCache& deviceCache) {
    // Your implementation goes here
    printf("queryDevice\n");
  }

  void queryDeviceByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::DeviceCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("queryDeviceByDevOnlyId\n");
  }

  void queryDeviceByIp( ::com::vrv::cems::service::base::bean::cache::DeviceCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip) {
    // Your implementation goes here
    printf("queryDeviceByIp\n");
  }

  void deleteDevice( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceCache& deviceCache) {
    // Your implementation goes here
    printf("deleteDevice\n");
  }

  void deleteDeviceByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("deleteDeviceByDevOnlyId\n");
  }

  void deleteDeviceByIp( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip) {
    // Your implementation goes here
    printf("deleteDeviceByIp\n");
  }

  void batchSaveDevice(std::vector< ::com::vrv::cems::service::base::bean::cache::Result> & _return, const std::string& maxCode, const std::string& minCode, const std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceCache> & deviceCacheList) {
    // Your implementation goes here
    printf("batchSaveDevice\n");
  }

  void batchUpdateDevice(std::vector< ::com::vrv::cems::service::base::bean::cache::Result> & _return, const std::string& maxCode, const std::string& minCode, const std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceCache> & deviceCacheList) {
    // Your implementation goes here
    printf("batchUpdateDevice\n");
  }

  void batchQueryDevice(std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceCache> & _return, const std::string& maxCode, const std::string& minCode, const std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceCache> & deviceCacheList) {
    // Your implementation goes here
    printf("batchQueryDevice\n");
  }

  void batchQueryDeviceByDevOnlyId(std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceCache> & _return, const std::string& maxCode, const std::string& minCode, const std::vector<std::string> & devOnlyIdList) {
    // Your implementation goes here
    printf("batchQueryDeviceByDevOnlyId\n");
  }

  void batchDeleteDevice(std::vector< ::com::vrv::cems::service::base::bean::cache::Result> & _return, const std::string& maxCode, const std::string& minCode, const std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceCache> & deviceCacheList) {
    // Your implementation goes here
    printf("batchDeleteDevice\n");
  }

  void batchDeleteDeviceByDevOnlyId(std::vector< ::com::vrv::cems::service::base::bean::cache::Result> & _return, const std::string& maxCode, const std::string& minCode, const std::vector<std::string> & devOnlyIdList) {
    // Your implementation goes here
    printf("batchDeleteDeviceByDevOnlyId\n");
  }

  void saveDeviceOnline( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceOnlineCache& deviceOnlineCache) {
    // Your implementation goes here
    printf("saveDeviceOnline\n");
  }

  void updateDeviceOnline( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceOnlineCache& deviceOnlineCache) {
    // Your implementation goes here
    printf("updateDeviceOnline\n");
  }

  void updateDeviceOnlineByField( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::map<std::string, std::string> & fieldValueMap) {
    // Your implementation goes here
    printf("updateDeviceOnlineByField\n");
  }

  void queryDeviceOnline( ::com::vrv::cems::service::base::bean::cache::DeviceOnlineCache& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceOnlineCache& deviceOnlineCache) {
    // Your implementation goes here
    printf("queryDeviceOnline\n");
  }

  void queryDeviceOnlineByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::DeviceOnlineCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("queryDeviceOnlineByDevOnlyId\n");
  }

  void queryDeviceOnlineByIp( ::com::vrv::cems::service::base::bean::cache::DeviceOnlineCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip) {
    // Your implementation goes here
    printf("queryDeviceOnlineByIp\n");
  }

  void deleteDeviceOnline( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceOnlineCache& deviceOnlineCache) {
    // Your implementation goes here
    printf("deleteDeviceOnline\n");
  }

  void deleteDeviceOnlineByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("deleteDeviceOnlineByDevOnlyId\n");
  }

  void deleteDeviceOnlineByIp( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip) {
    // Your implementation goes here
    printf("deleteDeviceOnlineByIp\n");
  }

  void queryAllDeviceOnlineCache(std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceOnlineCache> & _return, const std::string& maxCode, const std::string& minCode) {
    // Your implementation goes here
    printf("queryAllDeviceOnlineCache\n");
  }

  void queryOnlineDevOnlyIdsByUserOnlyId(std::vector<std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId) {
    // Your implementation goes here
    printf("queryOnlineDevOnlyIdsByUserOnlyId\n");
  }

  void batchQueryDeviceOnlinesByDevOnlyIdList(std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceOnlineCache> & _return, const std::string& maxCode, const std::string& minCode, const std::vector<std::string> & devOnlyIdList) {
    // Your implementation goes here
    printf("batchQueryDeviceOnlinesByDevOnlyIdList\n");
  }

  void saveDeviceKey( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceKeyCache& deviceKeyCache) {
    // Your implementation goes here
    printf("saveDeviceKey\n");
  }

  void updateDeviceKey( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceKeyCache& deviceKeyCache) {
    // Your implementation goes here
    printf("updateDeviceKey\n");
  }

  void updateDeviceKeyByField( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& sessionId, const std::map<std::string, std::string> & fieldValueMap) {
    // Your implementation goes here
    printf("updateDeviceKeyByField\n");
  }

  void queryDeviceKey( ::com::vrv::cems::service::base::bean::cache::DeviceKeyCache& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceKeyCache& deviceKeyCache) {
    // Your implementation goes here
    printf("queryDeviceKey\n");
  }

  void queryDeviceKeyBySessionId( ::com::vrv::cems::service::base::bean::cache::DeviceKeyCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& sessionId) {
    // Your implementation goes here
    printf("queryDeviceKeyBySessionId\n");
  }

  void queryDeviceKeyByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::DeviceKeyCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("queryDeviceKeyByDevOnlyId\n");
  }

  void deleteDeviceKey( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DeviceKeyCache& deviceKeyCache) {
    // Your implementation goes here
    printf("deleteDeviceKey\n");
  }

  void deleteDeviceKeyBySessionId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& sessionId) {
    // Your implementation goes here
    printf("deleteDeviceKeyBySessionId\n");
  }

  void deleteDeviceKeyByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("deleteDeviceKeyByDevOnlyId\n");
  }

  void isExistSessionIdInDeviceKeyCache( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& sessionId) {
    // Your implementation goes here
    printf("isExistSessionIdInDeviceKeyCache\n");
  }

  void batchQueryDeviceKeysBySessionIdList(std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceKeyCache> & _return, const std::string& maxCode, const std::string& minCode, const std::vector<std::string> & sessionIdList) {
    // Your implementation goes here
    printf("batchQueryDeviceKeysBySessionIdList\n");
  }

  void saveDeviceInsProOld( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceProduct> & deviceProductList) {
    // Your implementation goes here
    printf("saveDeviceInsProOld\n");
  }

  void updateDeviceInsProOld( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceProduct> & deviceProductList) {
    // Your implementation goes here
    printf("updateDeviceInsProOld\n");
  }

  void queryDeviceInsProOldByDevOnlyId(std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceProduct> & _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("queryDeviceInsProOldByDevOnlyId\n");
  }

  void deleteDeviceInsProOldByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("deleteDeviceInsProOldByDevOnlyId\n");
  }

  void saveDeviceInsProNew( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceProduct> & deviceProductList) {
    // Your implementation goes here
    printf("saveDeviceInsProNew\n");
  }

  void updateDeviceInsProNew( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceProduct> & deviceProductList) {
    // Your implementation goes here
    printf("updateDeviceInsProNew\n");
  }

  void queryDeviceInsProNewByDevOnlyId(std::vector< ::com::vrv::cems::service::base::bean::cache::DeviceProduct> & _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("queryDeviceInsProNewByDevOnlyId\n");
  }

  void deleteDeviceInsProNewByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("deleteDeviceInsProNewByDevOnlyId\n");
  }

  void saveDevicePolicy( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DevicePolicyCache& devicePolicyCache) {
    // Your implementation goes here
    printf("saveDevicePolicy\n");
  }

  void updateDevicePolicy( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::DevicePolicyCache& devicePolicyCache) {
    // Your implementation goes here
    printf("updateDevicePolicy\n");
  }

  void queryDevicePolicyByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::DevicePolicyCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("queryDevicePolicyByDevOnlyId\n");
  }

  void queryDevicePolicyByIp( ::com::vrv::cems::service::base::bean::cache::DevicePolicyCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip) {
    // Your implementation goes here
    printf("queryDevicePolicyByIp\n");
  }

  void deleteDevicePolicyByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("deleteDevicePolicyByDevOnlyId\n");
  }

  void deleteDevicePolicyByIp( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip) {
    // Your implementation goes here
    printf("deleteDevicePolicyByIp\n");
  }

  void batchSaveDevicePolicy( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::vector<std::map<std::string, std::string> > & devicePolicyList) {
    // Your implementation goes here
    printf("batchSaveDevicePolicy\n");
  }

  void saveUser( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::UserCache& userCache) {
    // Your implementation goes here
    printf("saveUser\n");
  }

  void updateUser( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::UserCache& userCache) {
    // Your implementation goes here
    printf("updateUser\n");
  }

  void updateUserByField( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId, const std::map<std::string, std::string> & fieldValueMap) {
    // Your implementation goes here
    printf("updateUserByField\n");
  }

  void queryUserByUserOnlyId( ::com::vrv::cems::service::base::bean::cache::UserCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId) {
    // Your implementation goes here
    printf("queryUserByUserOnlyId\n");
  }

  void deleteUserByUserOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId) {
    // Your implementation goes here
    printf("deleteUserByUserOnlyId\n");
  }

  void batchSaveUser( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::vector< ::com::vrv::cems::service::base::bean::cache::UserCache> & userCacheList) {
    // Your implementation goes here
    printf("batchSaveUser\n");
  }

  void saveUserOnline( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::UserOnlineCache& userOnlineCache) {
    // Your implementation goes here
    printf("saveUserOnline\n");
  }

  void updateUserOnline( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::UserOnlineCache& userOnlineCache) {
    // Your implementation goes here
    printf("updateUserOnline\n");
  }

  void updateUserOnlineByField( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userDevId, const std::map<std::string, std::string> & fieldValueMap) {
    // Your implementation goes here
    printf("updateUserOnlineByField\n");
  }

  void queryUserOnlineByUserDevId( ::com::vrv::cems::service::base::bean::cache::UserOnlineCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& userDevId) {
    // Your implementation goes here
    printf("queryUserOnlineByUserDevId\n");
  }

  void deleteUserOnlineByUserDevId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userDevId) {
    // Your implementation goes here
    printf("deleteUserOnlineByUserDevId\n");
  }

  void queryAllUserOnlineDevice(std::map<std::string, std::set<std::string> > & _return, const std::string& maxCode, const std::string& minCode) {
    // Your implementation goes here
    printf("queryAllUserOnlineDevice\n");
  }

  void saveUserPolicy( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::UserPolicyCache& userPolicyCache) {
    // Your implementation goes here
    printf("saveUserPolicy\n");
  }

  void updateUserPolicy( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::UserPolicyCache& userPolicyCache) {
    // Your implementation goes here
    printf("updateUserPolicy\n");
  }

  void queryUserPolicyByUserOnlyId( ::com::vrv::cems::service::base::bean::cache::UserPolicyCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId) {
    // Your implementation goes here
    printf("queryUserPolicyByUserOnlyId\n");
  }

  void deleteUserPolicyByUserOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId) {
    // Your implementation goes here
    printf("deleteUserPolicyByUserOnlyId\n");
  }

  void batchSaveUserPolicy( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::vector<std::map<std::string, std::string> > & userPolicyist) {
    // Your implementation goes here
    printf("batchSaveUserPolicy\n");
  }

  void saveProductCInstallPack( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::CInstallPackCache& cInstallPackCache) {
    // Your implementation goes here
    printf("saveProductCInstallPack\n");
  }

  void updateProductCInstallPack( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::CInstallPackCache& cInstallPackCache) {
    // Your implementation goes here
    printf("updateProductCInstallPack\n");
  }

  void updateProductCInstallPackByField( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& cInstallPackId, const std::map<std::string, std::string> & fieldValueMap) {
    // Your implementation goes here
    printf("updateProductCInstallPackByField\n");
  }

  void queryProductCInstallPackById( ::com::vrv::cems::service::base::bean::cache::CInstallPackCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& cInstallPackId) {
    // Your implementation goes here
    printf("queryProductCInstallPackById\n");
  }

  void deleteProductCInstallPackById( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& cInstallPackId) {
    // Your implementation goes here
    printf("deleteProductCInstallPackById\n");
  }

  void savePolicy( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::PolicyCache& policyCache) {
    // Your implementation goes here
    printf("savePolicy\n");
  }

  void updatePolicy( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::PolicyCache& policyCache) {
    // Your implementation goes here
    printf("updatePolicy\n");
  }

  void updatePolicyByField( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& policyId, const std::map<std::string, std::string> & fieldValueMap) {
    // Your implementation goes here
    printf("updatePolicyByField\n");
  }

  void queryPolicyByPolicyId( ::com::vrv::cems::service::base::bean::cache::PolicyCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& policyId) {
    // Your implementation goes here
    printf("queryPolicyByPolicyId\n");
  }

  void deletePolicyByPolicyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& policyId) {
    // Your implementation goes here
    printf("deletePolicyByPolicyId\n");
  }

  void saveIPMAC2DevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip, const std::string& mac, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("saveIPMAC2DevOnlyId\n");
  }

  void updateIPMAC2DevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip, const std::string& mac, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("updateIPMAC2DevOnlyId\n");
  }

  void queryIPMAC2DevOnlyId(std::string& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip, const std::string& mac) {
    // Your implementation goes here
    printf("queryIPMAC2DevOnlyId\n");
  }

  void deleteIPMAC2DevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip, const std::string& mac) {
    // Your implementation goes here
    printf("deleteIPMAC2DevOnlyId\n");
  }

  void saveIP2DevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("saveIP2DevOnlyId\n");
  }

  void updateIP2DevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("updateIP2DevOnlyId\n");
  }

  void queryIP2DevOnlyId(std::string& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip) {
    // Your implementation goes here
    printf("queryIP2DevOnlyId\n");
  }

  void deleteIP2DevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& ip) {
    // Your implementation goes here
    printf("deleteIP2DevOnlyId\n");
  }

  void saveProductCUpgradePack( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::CUpgradePackCache& cUpgradePackCache) {
    // Your implementation goes here
    printf("saveProductCUpgradePack\n");
  }

  void updateProductCUpgradePack( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::CUpgradePackCache& cUpgradePackCache) {
    // Your implementation goes here
    printf("updateProductCUpgradePack\n");
  }

  void updateProductCUpgradePackByField( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& cUpgradePackId, const std::map<std::string, std::string> & fieldValueMap) {
    // Your implementation goes here
    printf("updateProductCUpgradePackByField\n");
  }

  void queryProductCUpgradePackById( ::com::vrv::cems::service::base::bean::cache::CUpgradePackCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& cUpgradePackId) {
    // Your implementation goes here
    printf("queryProductCUpgradePackById\n");
  }

  void deleteProductCUpgradePackById( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& cUpgradePackId) {
    // Your implementation goes here
    printf("deleteProductCUpgradePackById\n");
  }

  void saveAccount2UserOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& account, const std::string& userOnlyId) {
    // Your implementation goes here
    printf("saveAccount2UserOnlyId\n");
  }

  void updateAccount2UserOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& account, const std::string& userOnlyId) {
    // Your implementation goes here
    printf("updateAccount2UserOnlyId\n");
  }

  void queryAccount2UserOnlyId(std::string& _return, const std::string& maxCode, const std::string& minCode, const std::string& account) {
    // Your implementation goes here
    printf("queryAccount2UserOnlyId\n");
  }

  void deleteAccount2UserOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& account) {
    // Your implementation goes here
    printf("deleteAccount2UserOnlyId\n");
  }

  void batchSaveAccount2UserOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::vector< ::com::vrv::cems::service::base::bean::cache::UserCache> & userCacheList) {
    // Your implementation goes here
    printf("batchSaveAccount2UserOnlyId\n");
  }

  void savePtp( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& uuid, const std::string& ptpResult) {
    // Your implementation goes here
    printf("savePtp\n");
  }

  void updatePtp( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& uuid, const std::string& ptpResult) {
    // Your implementation goes here
    printf("updatePtp\n");
  }

  void queryPtp(std::string& _return, const std::string& maxCode, const std::string& minCode, const std::string& uuid) {
    // Your implementation goes here
    printf("queryPtp\n");
  }

  void deletePtp( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& uuid) {
    // Your implementation goes here
    printf("deletePtp\n");
  }

  void saveSensitive( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::SensitiveCache& sensitiveCache) {
    // Your implementation goes here
    printf("saveSensitive\n");
  }

  void updateSensitive( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::SensitiveCache& sensitiveCache) {
    // Your implementation goes here
    printf("updateSensitive\n");
  }

  void querySensitive( ::com::vrv::cems::service::base::bean::cache::SensitiveCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& name) {
    // Your implementation goes here
    printf("querySensitive\n");
  }

  void querySensitiveByField(std::string& _return, const std::string& maxCode, const std::string& minCode, const std::string& name, const std::string& fieldKey) {
    // Your implementation goes here
    printf("querySensitiveByField\n");
  }

  void deleteSensitive( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& name) {
    // Your implementation goes here
    printf("deleteSensitive\n");
  }

  void saveDeviceMsgDigest( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::map<std::string, std::vector<std::string> > & fieldValueMap) {
    // Your implementation goes here
    printf("saveDeviceMsgDigest\n");
  }

  void saveDeviceMsgDigestWithDevOnlyIdAndMsgType( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::string& msgType, const std::vector<std::string> & msgIdList) {
    // Your implementation goes here
    printf("saveDeviceMsgDigestWithDevOnlyIdAndMsgType\n");
  }

  void saveDeviceMsgDigestWithDevOnlyIdAndMsgTypeAndMsgId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::string& msgType, const std::string& msgId) {
    // Your implementation goes here
    printf("saveDeviceMsgDigestWithDevOnlyIdAndMsgTypeAndMsgId\n");
  }

  void deleteDeviceMsgDigestByDevOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("deleteDeviceMsgDigestByDevOnlyId\n");
  }

  void deleteDeviceMsgDigestByDevOnlyIdAndMsgType( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::string& msgType) {
    // Your implementation goes here
    printf("deleteDeviceMsgDigestByDevOnlyIdAndMsgType\n");
  }

  void deleteDeviceMsgDigestByDevOnlyIdAndMsgTypeAndMsgId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::string& msgType, const std::string& msgId) {
    // Your implementation goes here
    printf("deleteDeviceMsgDigestByDevOnlyIdAndMsgTypeAndMsgId\n");
  }

  void updateDeviceMsgDigest( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::string& msgType, const std::string& msgId) {
    // Your implementation goes here
    printf("updateDeviceMsgDigest\n");
  }

  void queryDeviceMsgDigestByDevOnlyId(std::map<std::string, std::vector<std::string> > & _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId) {
    // Your implementation goes here
    printf("queryDeviceMsgDigestByDevOnlyId\n");
  }

  void queryDeviceMsgDigestByDevIdAndMsgType(std::vector<std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& devOnlyId, const std::string& msgType) {
    // Your implementation goes here
    printf("queryDeviceMsgDigestByDevIdAndMsgType\n");
  }

  void saveUserMsgDigest( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId, const std::map<std::string, std::vector<std::string> > & fieldValueMap) {
    // Your implementation goes here
    printf("saveUserMsgDigest\n");
  }

  void saveUserMsgDigestWithUserOnlyIdAndMsgType( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId, const std::string& msgType, const std::vector<std::string> & msgIdList) {
    // Your implementation goes here
    printf("saveUserMsgDigestWithUserOnlyIdAndMsgType\n");
  }

  void saveUserMsgDigestWithUserOnlyIdAndMsgTypeAndMsgId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId, const std::string& msgType, const std::string& msgId) {
    // Your implementation goes here
    printf("saveUserMsgDigestWithUserOnlyIdAndMsgTypeAndMsgId\n");
  }

  void deleteUserMsgDigestByUserOnlyId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId) {
    // Your implementation goes here
    printf("deleteUserMsgDigestByUserOnlyId\n");
  }

  void deleteUserMsgDigestByUserOnlyIdAndMsgType( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId, const std::string& msgType) {
    // Your implementation goes here
    printf("deleteUserMsgDigestByUserOnlyIdAndMsgType\n");
  }

  void deleteUserMsgDigestByUserOnlyIdAndMsgTypeAndMsgId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId, const std::string& msgType, const std::string& msgId) {
    // Your implementation goes here
    printf("deleteUserMsgDigestByUserOnlyIdAndMsgTypeAndMsgId\n");
  }

  void updateUserMsgDigest( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId, const std::string& msgType, const std::string& msgId) {
    // Your implementation goes here
    printf("updateUserMsgDigest\n");
  }

  void queryUserMsgDigestByUserOnlyId(std::map<std::string, std::vector<std::string> > & _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId) {
    // Your implementation goes here
    printf("queryUserMsgDigestByUserOnlyId\n");
  }

  void queryDeviceMsgDigestByUserOnlyIdAndMsgType(std::vector<std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& userOnlyId, const std::string& msgType) {
    // Your implementation goes here
    printf("queryDeviceMsgDigestByUserOnlyIdAndMsgType\n");
  }

  void saveMsg( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::MsgCache& msgCache) {
    // Your implementation goes here
    printf("saveMsg\n");
  }

  void deleteMsg( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& msgId) {
    // Your implementation goes here
    printf("deleteMsg\n");
  }

  void queryMsg( ::com::vrv::cems::service::base::bean::cache::MsgCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& msgId) {
    // Your implementation goes here
    printf("queryMsg\n");
  }

  void saveToken( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::TokenCache& tokenCache) {
    // Your implementation goes here
    printf("saveToken\n");
  }

  void deleteTokenByAppId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& appId) {
    // Your implementation goes here
    printf("deleteTokenByAppId\n");
  }

  void updateTokenByAppId( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const  ::com::vrv::cems::service::base::bean::cache::TokenCache& tokenCache) {
    // Your implementation goes here
    printf("updateTokenByAppId\n");
  }

  void queryTokenByAppId( ::com::vrv::cems::service::base::bean::cache::TokenCache& _return, const std::string& maxCode, const std::string& minCode, const std::string& appId) {
    // Your implementation goes here
    printf("queryTokenByAppId\n");
  }

  void saveSession( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& sId, const std::map<std::string, std::string> & hashMap) {
    // Your implementation goes here
    printf("saveSession\n");
  }

  void saveSessionByDetail( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& sId, const std::string& key, const std::string& value) {
    // Your implementation goes here
    printf("saveSessionByDetail\n");
  }

  void deleteSession( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& sId) {
    // Your implementation goes here
    printf("deleteSession\n");
  }

  void deleteSessionByDetail( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& sId, const std::string& key) {
    // Your implementation goes here
    printf("deleteSessionByDetail\n");
  }

  void updataSessionByDetail( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& sId, const std::string& key, const std::string& value) {
    // Your implementation goes here
    printf("updataSessionByDetail\n");
  }

  void updateSession( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& sId, const std::map<std::string, std::string> & hashMap) {
    // Your implementation goes here
    printf("updateSession\n");
  }

  void querySessionByDetail(std::string& _return, const std::string& maxCode, const std::string& minCode, const std::string& sId, const std::string& key) {
    // Your implementation goes here
    printf("querySessionByDetail\n");
  }

  void querySession(std::map<std::string, std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& sId) {
    // Your implementation goes here
    printf("querySession\n");
  }

  void commonHset( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("commonHset\n");
  }

  void commonHmset( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::map<std::string, std::string> & hashMap) {
    // Your implementation goes here
    printf("commonHmset\n");
  }

  void commonHsetnx( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::string& field, const std::string& value) {
    // Your implementation goes here
    printf("commonHsetnx\n");
  }

  void commonHdel( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::vector<std::string> & fields) {
    // Your implementation goes here
    printf("commonHdel\n");
  }

  void commonBatchHget(std::map<std::string, std::map<std::string, std::string> > & _return, const std::string& maxCode, const std::string& minCode, const std::vector<std::string> & keys) {
    // Your implementation goes here
    printf("commonBatchHget\n");
  }

  void commonHgetAll(std::map<std::string, std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& key) {
    // Your implementation goes here
    printf("commonHgetAll\n");
  }

  void commonHget(std::string& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::string& field) {
    // Your implementation goes here
    printf("commonHget\n");
  }

  void commonHmget(std::vector<std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::vector<std::string> & fields) {
    // Your implementation goes here
    printf("commonHmget\n");
  }

  void commonHscan(std::map<std::string, std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::string& cursor, const std::string& match, const std::string& count) {
    // Your implementation goes here
    printf("commonHscan\n");
  }

  void commonHvals(std::vector<std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& key) {
    // Your implementation goes here
    printf("commonHvals\n");
  }

  bool commonHexists(const std::string& maxCode, const std::string& minCode, const std::string& key, const std::string& field) {
    // Your implementation goes here
    printf("commonHexists\n");
  }

  int64_t commonHlen(const std::string& maxCode, const std::string& minCode, const std::string& key) {
    // Your implementation goes here
    printf("commonHlen\n");
  }

  void commonZadd( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::map<std::string, double> & hashMap, const std::string& options) {
    // Your implementation goes here
    printf("commonZadd\n");
  }

  void commonZrem( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::vector<std::string> & members) {
    // Your implementation goes here
    printf("commonZrem\n");
  }

  void commonZremrangeByScore( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const double min, const double max) {
    // Your implementation goes here
    printf("commonZremrangeByScore\n");
  }

  void commonZremrangeByRank( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const int64_t min, const int64_t max) {
    // Your implementation goes here
    printf("commonZremrangeByRank\n");
  }

  void commonZremrangeByLex( ::com::vrv::cems::service::base::bean::cache::Result& _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const std::string& min, const std::string& max) {
    // Your implementation goes here
    printf("commonZremrangeByLex\n");
  }

  int64_t commonZcard(const std::string& maxCode, const std::string& minCode, const std::string& key) {
    // Your implementation goes here
    printf("commonZcard\n");
  }

  double commonZscore(const std::string& maxCode, const std::string& minCode, const std::string& key, const std::string& member) {
    // Your implementation goes here
    printf("commonZscore\n");
  }

  int64_t commonZrank(const std::string& maxCode, const std::string& minCode, const std::string& key, const std::string& member, const std::string& sortType) {
    // Your implementation goes here
    printf("commonZrank\n");
  }

  void commonPageZrangeByScore(std::set<std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const double min, const double max, const std::string& sortType, const int32_t offset, const int32_t count) {
    // Your implementation goes here
    printf("commonPageZrangeByScore\n");
  }

  void commonPageZrangeByScoreWithScores(std::map<std::string, std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const double min, const double max, const std::string& sortType, const int32_t offset, const int32_t count) {
    // Your implementation goes here
    printf("commonPageZrangeByScoreWithScores\n");
  }

  void commonZrangeByScore(std::map<std::string, std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const double min, const double max, const std::string& sortType) {
    // Your implementation goes here
    printf("commonZrangeByScore\n");
  }

  void commonZrangeByScoreWithScores(std::set<std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const double min, const double max, const std::string& sortType) {
    // Your implementation goes here
    printf("commonZrangeByScoreWithScores\n");
  }

  void commonZrange(std::set<std::string> & _return, const std::string& maxCode, const std::string& minCode, const std::string& key, const int64_t min, const int64_t max, const std::string& sortType) {
    // Your implementation goes here
    printf("commonZrange\n");
  }

  double commonZincrby(const std::string& maxCode, const std::string& minCode, const std::string& key, const double sorce, const std::string& member) {
    // Your implementation goes here
    printf("commonZincrby\n");
  }

  int64_t commonZcount(const std::string& maxCode, const std::string& minCode, const std::string& key, const double min, const double max) {
    // Your implementation goes here
    printf("commonZcount\n");
  }

};

int main(int argc, char **argv) {
  int port = 9090;
  shared_ptr<CacheServiceHandler> handler(new CacheServiceHandler());
  shared_ptr<TProcessor> processor(new CacheServiceProcessor(handler));
  shared_ptr<TServerTransport> serverTransport(new TServerSocket(port));
  shared_ptr<TTransportFactory> transportFactory(new TBufferedTransportFactory());
  shared_ptr<TProtocolFactory> protocolFactory(new TBinaryProtocolFactory());

  TSimpleServer server(processor, serverTransport, transportFactory, protocolFactory);
  server.serve();
  return 0;
}

